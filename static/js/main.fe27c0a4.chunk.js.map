{"version":3,"sources":["TodoItem.js","todoData.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","state","completed","data","handleChange","bind","id","this","setState","prevState","className","type","checked","onChange","text","Component","todoData","App","map","t","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAmCeA,G,wDA9BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,EAAKF,MAAMG,KAAKD,YAAa,GAE5C,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBALL,E,yDAQNC,GACLC,KAAKP,MAAMI,aACXG,KAAKP,MAAMI,aAAaG,KAAKP,MAAMG,KAAKG,IAG5CC,KAAKC,UAAS,SAAAC,GACV,MAAO,CAACP,WAAYO,EAAUP,gB,+BAI5B,IAAD,OACL,OAAO,wBAAOQ,UAAU,YAAjB,UACH,uBACIC,KAAK,WACLC,QAASL,KAAKN,MAAMC,UACpBW,SAAU,kBAAM,EAAKT,aAAa,EAAKJ,MAAMG,KAAKG,OACrDC,KAAKP,MAAMG,KAAKW,Y,GA1BNC,cCWRC,EAbE,CACb,CACIV,GAAI,EACJQ,KAAM,uBACNZ,WAAW,GAEf,CACII,GAAI,EACJQ,KAAM,mBACNZ,WAAW,IC+BJe,E,kDAhCX,aAAe,IAAD,8BACV,gBACKhB,MAAQ,CACTe,SAAUA,GAEd,EAAKZ,aAAe,EAAKA,aAAaC,KAAlB,gBALV,E,yDAQDC,GACTC,KAAKC,UAAS,SAAAC,GACV,MAAO,CACHO,SAAUP,EAAUO,SAASE,KAAI,SAAAC,GAC7B,OAAIA,EAAEb,KAAOA,EAAW,2BAAIa,GAAX,IAAcjB,WAAYiB,EAAEjB,YACtCiB,W,+BAMb,IAAD,OACL,OACI,sBAAKT,UAAU,aAAf,cAA+BH,KAAKN,MAAMe,SAASE,KAAI,SAAAC,GAAC,OACpD,cAAC,EAAD,CAEIf,aAAc,EAAKA,aACnBD,KAAMgB,GAHV,UACYA,EAAEb,GADd,cACsBa,EAAEC,KADxB,cACkCD,EAAEjB,eAFxC,W,GAvBMa,aCKHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe27c0a4.chunk.js","sourcesContent":["\nimport React, { Component } from 'react'\n\nclass TodoItem extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            completed: this.props.data.completed || false\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(id) {\n        if (this.props.handleChange) {\n            this.props.handleChange(this.props.data.id)\n            return\n        }\n        this.setState(prevState => {\n            return {completed: !prevState.completed}\n        })\n    }\n\n    render() {\n        return <label className=\"todo-item\">\n            <input\n                type=\"checkbox\"\n                checked={this.state.completed}\n                onChange={() => this.handleChange(this.props.data.id)} />\n            {this.props.data.text}\n        </label>\n    }\n\n}\n\nexport default TodoItem\n","\nconst todoData = [\n    {\n        id: 1,\n        text: \"take out the garbage\",\n        completed: false\n    },\n    {\n        id: 2,\n        text: \"grocery shopping\",\n        completed: false\n    }\n]\n\nexport default todoData\n","\nimport React, { Component } from 'react'\n\nimport './App.css'\nimport TodoItem from './TodoItem'\nimport todoData from './todoData'\n\nclass App extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            todoData: todoData\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(id) {\n        this.setState(prevState => {\n            return {\n                todoData: prevState.todoData.map(t => {\n                    if (t.id === id) return {...t, completed: !t.completed}\n                    return t\n                })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"todo-items\"> { this.state.todoData.map(t =>\n                <TodoItem\n                    key={`${t.id} + ${t.name} + ${t.completed}`}\n                    handleChange={this.handleChange}\n                    data={t} />)\n            } </div>\n        )\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}